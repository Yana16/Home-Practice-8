{"version":3,"file":"static/js/470.1ff6a4c5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/Contacts/ContactForm/contact-form.module.scss?ccb4","modules/Contacts/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/modules/Contacts/ContactList/contact-list.module.css?b948","modules/Contacts/ContactList/ContactList.jsx","webpack://react-homework-template/./src/modules/Contacts/Filter/filter.module.css?3b52","modules/Contacts/Filter/Filter.jsx","redux/filter/filter-selector.js","redux/contacts/contact-selectors.js","pages/CotactsPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"TaskEditor\":\"contact-form_TaskEditor__UkM8h\",\"TaskEditor_label\":\"contact-form_TaskEditor_label__BeeX+\",\"TaskEditor_input\":\"contact-form_TaskEditor_input__udret\",\"TaskEditorinput\":\"contact-form_TaskEditorinput__tVt1K\",\"TaskEditor_button\":\"contact-form_TaskEditor_button__WW0W0\"};","import React, { useState } from 'react';\nimport styles from '../../Contacts/ContactForm/contact-form.module.scss';\n\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { fetchAddContact } from '../../../redux/contacts/contact-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    dispatch(fetchAddContact(contact));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={styles.TaskEditor} onSubmit={handleSubmit}>\n      <label className={styles.TaskEditor_label}>\n        Name\n        <input\n          className={styles.TaskEditor_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={styles.TaskEditor_label}>\n        Number\n        <input\n          className={styles.TaskEditor_input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={styles.TaskEditor_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"TaskList\":\"contact-list_TaskList__fMggv\",\"TaskList_item\":\"contact-list_TaskList_item__S9NON\",\"completed\":\"contact-list_completed__Vq7gX\",\"TaskList_text\":\"contact-list_TaskList_text__et2s0\",\"TaskList_actions\":\"contact-list_TaskList_actions__qkuxj\",\"TaskList_button\":\"contact-list_TaskList_button__X6EoT\"};","import React from 'react';\nimport styles from '../ContactList/contact-list.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from '../../../redux/contacts/contact-operations';\n\nconst ContactList = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <ul className={styles.TaskList}>\n      {contacts.map(contact => (\n        <li className={styles.TaskList_item} key={contact.id}>\n          {contact.name + ':          ' + contact.phone}\n\n          {\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemoveContact(contact.id)}\n            >\n              delete\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"Filter\":\"filter_Filter__kJlRI\",\"FilterInput\":\"filter_FilterInput__v7iiQ\"};","import React from 'react';\nimport styles from '../Filter/filter.module.css';\n\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../../redux/filter/filter-slice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(changeFilter(e));\n  };\n\n  return (\n    <div className={styles.Filter}>\n      Find contacts by name\n      <input\n        className={styles.FilterInput}\n        type=\"text\"\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n","export const getFilter = store => store.filter;\n","export const getAllContacts = store => store.contacts.items;\n","import { useEffect } from 'react';\nimport React from 'react';\nimport ContactForm from '../../modules/Contacts/ContactForm/ContactForm';\nimport ContactList from '../../modules/Contacts/ContactList/ContactList';\nimport Filter from '../../modules/Contacts/Filter/Filter';\nimport { getFilter } from '../../redux/filter/filter-selector';\nimport { getAllContacts } from '../../redux/contacts/contact-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAllContacts } from '../../redux/contacts/contact-operations';\n\nconst ContactsPage = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getAllContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const filteredContacts = (contacts, filter) => {\n    const normolizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normolizedFilter)\n    );\n  };\n\n  console.log(filteredContacts(contacts, filter));\n\n  return (\n    <div>\n      <h1 className=\"h1\">Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && <Filter />}â€‹\n      {contacts.length > 0 && (\n        <ContactList contacts={filteredContacts(contacts, filter)} />\n      )}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","value","className","styles","onSubmit","preventDefault","contact","id","nanoid","fetchAddContact","type","onChange","contacts","map","phone","onClick","fetchDeleteContact","Filter","changeFilter","onChangeFilter","getFilter","store","filter","getAllContacts","items","useSelector","useEffect","fetchAllContacts","filteredContacts","normolizedFilter","toLowerCase","includes","console","log","length","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}